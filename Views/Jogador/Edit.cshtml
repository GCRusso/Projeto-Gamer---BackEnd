@model Jogador

@{
    ViewData["Title"] = "Edit";
}

@*Para evitar que acessem as outras abas sem estar logado existe esta validação com IF E ELSE
if = força o usuário a se logar caso contrário ele irá sempre retornar para view de LOGIN
else = insere todo o conteudo da pagina FAZER EM TODAS AS VIEWS NO CASO EDIT E INDEX  *@
@if (ViewBag.UserName == null)
{
    <a asp-area="" asp-controller="Login" asp-action="Index"></a>
}

else
{
    <h1>Edição de Jogadores</h1>
@*method = post = porque sao dados sensiveis que nao devem mostrar no URL*@
@*enctype="multipart/form-data = quando ha um formulario com varios tipos de dados, neste caso temos texto e imagem *@
<form method="post" action='@Url.Action("Atualizar")'>
    @* para deixar oculto o nosso id *@
    <input type="hidden" name="IdJogador" value="@ViewBag.Jogador.IdJogador">

    <input type="hidden" name="IdEquipe" value="@ViewBag.Jogador.IdEquipe">

    <label for="">Nome</label>
    @* required no nome, nao será possivel deixar o INPUT vazio *@
    <input type="text" name="Nome" value="@ViewBag.Jogador.NomeJogador">

    <label for="">Email</label>
    <input type="email" name="Email" value="@ViewBag.Jogador.Email">

    <label for="">Senha</label>
    <input type="password" name="Senha" value="@ViewBag.Jogador.Senha">

    @*Validação para mostrar quando for editar o que já está na nossa lista, já vem preenchido os campos*@
    <label for="">Equipe</label>
    <select name="IdEquipe" id="IdEquipe">
        <option value="0">Selecione uma opção: </option>
        @foreach (Equipe equipe in ViewBag.Equipe)
        {
            @if (equipe.IdEquipe == @ViewBag.Jogador.IdEquipe)
            {
                @*selected = aqui que ele mostra o campo preenchido*@
                <option value="equipe.IdEquipe" selected>@equipe.NomeEquipe</option>
            }
            
            else
            {
                <option value="@equipe.IdEquipe">@equipe.NomeEquipe</option>
            }
        }
    </select>

    <button>Atualizar</button>
</form>
}
